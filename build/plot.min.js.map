{"version":3,"file":"plot.min.js","sources":["../src/plot.ts"],"sourcesContent":["import {NodeType, INxtx, Package, Node} from '../nxtx';\r\n\r\ndeclare const nxtx: INxtx;\r\n\r\nconst pkg: Package = {\r\n    name: 'plot',\r\n    commands: {\r\n        plot: (dictionaryNode: Node) => {\r\n            console.log(\"Drawing..\");\r\n            let {type, y, ylabel, xlabel} = dictionaryNode.value;\r\n            const canvas = <HTMLCanvasElement>nxtx.htmlLite(\"canvas\", {});\r\n\r\n            const yValue = dictionaryNode.value.y.value.map(e => e.value);\r\n\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            const canvasHeight = canvas.height = 200;\r\n            const canvasWidth = canvas.width = 400;\r\n\r\n            const offset = 30;\r\n            const graphHeight = canvasHeight -offset;\r\n            const graphWidth = canvasWidth -offset;\r\n\r\n            canvas.style.margin = \"auto\";\r\n            canvas.style.display = \"block\";\r\n            const normalizedY = normalize(yValue);\r\n            const spacing =graphWidth / (normalizedY.length-1);\r\n\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.translate(0.5,0.5);\r\n\r\n\r\n            ///////////// Vertical labels\r\n            const yLabels = generateYLabels(yValue,10);\r\n            const verticalSpacing =graphHeight / (yLabels.length-1);\r\n\r\n            ctx.beginPath();\r\n            for(let i = 0;i<yLabels.length;i++){\r\n                line(ctx,offset,verticalSpacing*i,offset+5,verticalSpacing*i,1);\r\n                ctx.fillText(String(Math.round(yLabels[i])),0,i*verticalSpacing+4);\r\n            }\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n\r\n            ///////////// Graph\r\n            ctx.beginPath();\r\n            for (let i = 0; i < normalizedY.length - 1; i++) {\r\n                line(ctx,i * spacing + offset, graphHeight-(normalizedY[i] * graphHeight),\r\n                    (i+1)*spacing + offset, graphHeight-(normalizedY[i + 1] * graphHeight),1);\r\n            }\r\n\r\n            ctx.stroke();\r\n            ctx.lineCap = \"round\";\r\n\r\n\r\n\r\n            //////// Borders\r\n            line(ctx,offset,0,offset,canvasHeight-offset+10);\r\n            line(ctx, offset-10,canvasHeight-offset ,canvasWidth,canvasHeight-offset);\r\n\r\n\r\n            ctx.stroke();\r\n            console.log(\"Done drawing\");\r\n\r\n            return canvas;\r\n        }\r\n    },\r\n};\r\n\r\n\r\nfunction generateYLabels(values,amount) {\r\n    const min = Math.min(...values);\r\n    const max = Math.max(...values);\r\n\r\n    const delta = (max - min)/(amount-1);\r\n    const output = [];\r\n    for(let i = 0;i<=(amount-1);i++)\r\n        output.push(min+(delta*i));\r\n\r\n    return output;\r\n}\r\n\r\nfunction line(context,x1,y1,x2,y2,lineWidth = 1) {\r\n    context.lineWidth = lineWidth;\r\n    context.moveTo(x1,y1);\r\n    context.lineTo(x2,y2);\r\n\r\n}\r\n\r\nfunction normalize(array) {\r\n    const min = Math.min(...array);\r\n    const max = Math.max(...array) - min;\r\n    return array.map(e => (e - min) / max);\r\n}\r\nif(nxtx) nxtx.registerPackage(pkg);\r\n\r\n\r\nexport default pkg;"],"names":["pkg","name","commands","plot","dictionaryNode","console","log","_a","canvas","nxtx","htmlLite","yValue","value","y","map","e","ctx","getContext","canvasHeight","height","canvasWidth","width","graphHeight","graphWidth","style","margin","display","array","min","max","normalizedY","Math","spacing","length","imageSmoothingEnabled","translate","yLabels","values","amount","delta","output","i","push","generateYLabels","verticalSpacing","beginPath","line","offset","fillText","String","round","stroke","closePath","lineCap","context","x1","y1","x2","y2","lineWidth","moveTo","lineTo","registerPackage"],"mappings":"iCAIA,IAAMA,EAAe,CACjBC,KAAM,OACNC,SAAU,CACNC,KAAM,SAACC,GACHC,QAAQC,IAAI,aACR,IAAAC,UACEC,gCAA4BC,KAAKC,SAAS,SAAU,KAEpDC,EAASP,EAAeQ,MAAMC,EAAED,MAAME,IAAI,SAAAC,GAAK,OAAAA,EAAEH,QAEjDI,EAAMR,EAAOS,WAAW,MAExBC,EAAeV,EAAOW,OAAS,IAC/BC,EAAcZ,EAAOa,MAAQ,IAG7BC,EAAcJ,EADL,GAETK,EAAaH,EAFJ,GAIfZ,EAAOgB,MAAMC,OAAS,OACtBjB,EAAOgB,MAAME,QAAU,QACvB,IAiEOC,EACTC,EACAC,EAnEQC,GAiECH,EAjEuBhB,EAkEhCiB,EAAMG,KAAKH,UAALG,KAAYJ,GAClBE,EAAME,KAAKF,UAALE,KAAYJ,GAASC,EAC1BD,EAAMb,IAAI,SAAAC,GAAK,OAACA,EAAIa,GAAOC,KAnEpBG,EAAST,GAAcO,EAAYG,OAAO,GAEhDjB,EAAIkB,uBAAwB,EAC5BlB,EAAImB,UAAU,GAAI,IAIlB,IAAMC,EAsClB,SAAyBC,EAAOC,GAM5B,IALA,IAAMV,EAAMG,KAAKH,UAALG,KAAYM,GAGlBE,GAFMR,KAAKF,UAALE,KAAYM,GAEHT,IAAMU,EAAO,GAC5BE,EAAS,GACPC,EAAI,EAAEA,GAAIH,EAAO,EAAGG,IACxBD,EAAOE,KAAKd,EAAKW,EAAME,GAE3B,OAAOD,EA/CiBG,CAAgBhC,EAAO,IACjCiC,EAAiBtB,GAAec,EAAQH,OAAO,GAErDjB,EAAI6B,YACJ,IAAI,IAAIJ,EAAI,EAAEA,EAAEL,EAAQH,OAAOQ,IAC3BK,EAAK9B,EAnBM,GAmBK4B,EAAgBH,EAAEM,GAASH,EAAgBH,EAAE,GAC7DzB,EAAIgC,SAASC,OAAOlB,KAAKmB,MAAMd,EAAQK,KAAK,EAAEA,EAAEG,EAAgB,GAEpE5B,EAAImC,SACJnC,EAAIoC,YAIJpC,EAAI6B,YACJ,IAASJ,EAAI,EAAGA,EAAIX,EAAYG,OAAS,EAAGQ,IACxCK,EAAK9B,EAAIyB,EAAIT,EA7BF,GA6BoBV,EAAaQ,EAAYW,GAAKnB,GACxDmB,EAAE,GAAGT,EA9BC,GA8BiBV,EAAaQ,EAAYW,EAAI,GAAKnB,EAAa,GAgB/E,OAbAN,EAAImC,SACJnC,EAAIqC,QAAU,QAKdP,EAAK9B,EAvCU,GAuCC,EAvCD,GAuCUE,EAvCV,GAuC8B,IAC7C4B,EAAK9B,EAAK+B,GAAU7B,EAxCL,GAwC0BE,EAAYF,EAxCtC,IA2CfF,EAAImC,SACJ9C,QAAQC,IAAI,gBAELE,KAkBnB,SAASsC,EAAKQ,EAAQC,EAAGC,EAAGC,EAAGC,EAAGC,gBAAAA,KAC9BL,EAAQK,UAAYA,EACpBL,EAAQM,OAAOL,EAAGC,GAClBF,EAAQO,OAAOJ,EAAGC,UASnBjD,MAAMA,KAAKqD,gBAAgB9D"}