{"version":3,"file":"plot.min.js","sources":["../src/plot.ts"],"sourcesContent":["import {NodeType, INxtx, Package, Node} from '../nxtx';\r\n\r\ndeclare const nxtx: INxtx;\r\n\r\nconst pkg: Package = {\r\n    name: 'plot',\r\n    commands: {\r\n        plot: (dictionaryNode: Node) => {\r\n            console.log(\"Drawing..\");\r\n            let {type, y, ylabel, xlabel} = dictionaryNode.value;\r\n            const canvas = <HTMLCanvasElement>nxtx.htmlLite(\"canvas\", {});\r\n\r\n            const yValue = dictionaryNode.value.y.value.map(e => e.value);\r\n\r\n            console.log(yValue);\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            const canvasHeight = canvas.height = 200;\r\n            const canvasWidth = canvas.width = 400;\r\n\r\n            canvas.style.margin = \"auto\";\r\n            canvas.style.display = \"block\";\r\n            const normalizedY = normalize(yValue);\r\n\r\n            const spacing =canvasWidth / (normalizedY.length-1);\r\n            console.log(\"spacing \",spacing);\r\n\r\n            ctx.beginPath();\r\n            for (let i = 0; i < normalizedY.length - 1; i++) {\r\n                line(ctx,i * spacing, canvasHeight-(normalizedY[i] * canvasHeight),\r\n                    (i+1)*spacing, canvasHeight-(normalizedY[i + 1] * canvasHeight));\r\n            }\r\n\r\n            line(ctx,30,0,30,canvasHeight-30);\r\n\r\n\r\n            console.log(\"Done drawing\");\r\n            return canvas;\r\n        }\r\n    },\r\n};\r\n\r\nfunction line(context,x1,y1,x2,y2) {\r\n    context.moveTo(x1,y1);\r\n    context.lineTo(x2,y2);\r\n    context.stroke();\r\n}\r\n\r\nfunction normalize(array) {\r\n    const min = Math.min(...array);\r\n    const max = Math.max(...array) - min;\r\n    return array.map(e => (e - min) / max);\r\n}\r\nif(nxtx) nxtx.registerPackage(pkg);\r\n\r\n\r\nexport default pkg;"],"names":["pkg","name","commands","plot","dictionaryNode","console","log","_a","canvas","nxtx","htmlLite","yValue","value","y","map","e","ctx","getContext","canvasHeight","height","canvasWidth","width","style","margin","display","array","min","max","normalizedY","Math","spacing","length","beginPath","i","line","context","x1","y1","x2","y2","moveTo","lineTo","stroke","registerPackage"],"mappings":"iCAIA,IAAMA,EAAe,CACjBC,KAAM,OACNC,SAAU,CACNC,KAAM,SAACC,GACHC,QAAQC,IAAI,aACR,IAAAC,UACEC,gCAA4BC,KAAKC,SAAS,SAAU,KAEpDC,EAASP,EAAeQ,MAAMC,EAAED,MAAME,IAAI,SAAAC,GAAK,OAAAA,EAAEH,QAEvDP,QAAQC,IAAIK,GACZ,IAAMK,EAAMR,EAAOS,WAAW,MAExBC,EAAeV,EAAOW,OAAS,IAC/BC,EAAcZ,EAAOa,MAAQ,IAEnCb,EAAOc,MAAMC,OAAS,OACtBf,EAAOc,MAAME,QAAU,QACvB,IA0BOC,EACTC,EACAC,EA5BQC,GA0BCH,EA1BuBd,EA2BhCe,EAAMG,KAAKH,UAALG,KAAYJ,GAClBE,EAAME,KAAKF,UAALE,KAAYJ,GAASC,EAC1BD,EAAMX,IAAI,SAAAC,GAAK,OAACA,EAAIW,GAAOC,KA3BpBG,EAASV,GAAeQ,EAAYG,OAAO,GACjD1B,QAAQC,IAAI,WAAWwB,GAEvBd,EAAIgB,YACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAYG,OAAS,EAAGE,IACxCC,EAAKlB,EAAIiB,EAAIH,EAASZ,EAAcU,EAAYK,GAAKf,GAChDe,EAAE,GAAGH,EAASZ,EAAcU,EAAYK,EAAI,GAAKf,GAO1D,OAJAgB,EAAKlB,EAAI,GAAG,EAAE,GAAGE,EAAa,IAG9Bb,QAAQC,IAAI,gBACLE,KAKnB,SAAS0B,EAAKC,EAAQC,EAAGC,EAAGC,EAAGC,GAC3BJ,EAAQK,OAAOJ,EAAGC,GAClBF,EAAQM,OAAOH,EAAGC,GAClBJ,EAAQO,gBAQTjC,MAAMA,KAAKkC,gBAAgB3C"}