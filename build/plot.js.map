{"version":3,"file":"plot.js","sources":["../src/plot.ts"],"sourcesContent":["import {NodeType, INxtx, Package, Node} from '../nxtx';\r\n\r\ndeclare const nxtx: INxtx;\r\n\r\nconst pkg: Package = {\r\n    name: 'plot',\r\n    commands: {\r\n        plot: (dictionaryNode: Node) => {\r\n            console.log(\"Drawing..\");\r\n            let {type, y, ylabel, xlabel} = dictionaryNode.value;\r\n            const canvas = <HTMLCanvasElement>nxtx.htmlLite(\"canvas\", {});\r\n\r\n            const yValue = dictionaryNode.value.y.value.map(e => e.value);\r\n\r\n            console.log(yValue);\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            const canvasHeight = canvas.height = 200;\r\n            const canvasWidth = canvas.width = 400;\r\n\r\n            canvas.style.margin = \"auto\";\r\n            canvas.style.display = \"block\";\r\n            const normalizedY = normalize(yValue);\r\n\r\n            const spacing =canvasWidth / (normalizedY.length-1);\r\n            console.log(\"spacing \",spacing);\r\n\r\n            ctx.beginPath();\r\n            for (let i = 0; i < normalizedY.length - 1; i++) {\r\n                line(ctx,i * spacing, canvasHeight-(normalizedY[i] * canvasHeight),\r\n                    (i+1)*spacing, canvasHeight-(normalizedY[i + 1] * canvasHeight));\r\n            }\r\n\r\n            line(ctx,30,0,30,canvasHeight-30);\r\n\r\n\r\n            console.log(\"Done drawing\");\r\n            return canvas;\r\n        }\r\n    },\r\n};\r\n\r\nfunction line(context,x1,y1,x2,y2) {\r\n    context.moveTo(x1,y1);\r\n    context.lineTo(x2,y2);\r\n    context.stroke();\r\n}\r\n\r\nfunction normalize(array) {\r\n    const min = Math.min(...array);\r\n    const max = Math.max(...array) - min;\r\n    return array.map(e => (e - min) / max);\r\n}\r\nif(nxtx) nxtx.registerPackage(pkg);\r\n\r\n\r\nexport default pkg;"],"names":[],"mappings":";;;IAIA,IAAM,GAAG,GAAY;QACjB,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE;YACN,IAAI,EAAE,UAAC,cAAoB;gBACvB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACrB,IAAA,yBAAgD,EAA/C,cAAI,EAAE,QAAC,EAAE,kBAAM,EAAE,kBAA8B,CAAC;gBACrD,IAAM,MAAM,GAAsB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;gBAE9D,IAAM,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,KAAK,GAAA,CAAC,CAAC;gBAE9D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpB,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAEpC,IAAM,YAAY,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;gBACzC,IAAM,WAAW,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;gBAEvC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC7B,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC/B,IAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;gBAEtC,IAAM,OAAO,GAAE,WAAW,IAAI,WAAW,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,UAAU,EAAC,OAAO,CAAC,CAAC;gBAEhC,GAAG,CAAC,SAAS,EAAE,CAAC;gBAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,GAAG,EAAC,CAAC,GAAG,OAAO,EAAE,YAAY,IAAE,WAAW,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,EAC9D,CAAC,CAAC,GAAC,CAAC,IAAE,OAAO,EAAE,YAAY,IAAE,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;iBACxE;gBAED,IAAI,CAAC,GAAG,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,YAAY,GAAC,EAAE,CAAC,CAAC;gBAGlC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAC5B,OAAO,MAAM,CAAC;aACjB;SACJ;KACJ,CAAC;IAEF,SAAS,IAAI,CAAC,OAAO,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE;QAC7B,OAAO,CAAC,MAAM,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACtB,OAAO,CAAC,MAAM,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QACtB,OAAO,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,SAAS,SAAS,CAAC,KAAK;QACpB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAK,CAAC,CAAC;QAC/B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAK,IAAI,GAAG,CAAC;QACrC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAA,CAAC,CAAC;IAC3C,CAAC;IACD,IAAG,IAAI;QAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;;;;;;;;"}